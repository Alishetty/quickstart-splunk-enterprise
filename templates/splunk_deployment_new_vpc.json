{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Splunk deployment with indexer and search head clustering, with auto-healing cluster master.",
  "Parameters": {
    "InstanceType": {
      "Type": "String",
      "Default": "c4.large",
      "AllowedValues": [
        "c4.large",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "m4.10xlarge",
        "r4.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SplunkAdminPassword": {
      "NoEcho": "true",
      "Description": "Admin password for Splunk. Must be at least 8 characters containing letters, numbers and symbols",
      "Type": "String",
      "MinLength": "6",
      "MaxLength": "32",
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "ConstraintDescription": "Must be alphanumeric only.  6-32 characters"
    },
    "SplunkLicenseBucket" : {
      "Description" : "Name of private S3 bucket with licenses to be accessed via authenticated requests",
      "Type" : "String"
    },
    "SplunkLicensePath" : {
      "Description" : "Path to license file in S3 Bucket (without leading '/')",
      "Type" : "String"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation": {
      "Description": "The IP address range that is allowed to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation.  Use 0.0.0.0/0 for no restrictions."
    },
    "SplunkIndexerCount": {
      "Description": "How many Splunk indexers to launch.  [3-10]",
      "Type": "Number",
      "MinValue": "3",
      "MaxValue": "10",
      "Default": "3",
      "ConstraintDescription": "must be a valid number, 3-10"
    },
    "SplunkReplicationFactor": {
      "Description": "How many copies of data should be stored in the Splunk Indexer Cluster",
      "Type": "Number",
      "MinValue": "2",
      "MaxValue": "5",
      "Default": "3",
      "ConstraintDescription": "must be a valid number, 2-5"
    },
   "SplunkIndexerDiskSize": {
      "Description": "The size of the attached EBS volume to the Splunk indexers.  (in GB)",
      "Type": "Number",
      "MinValue": "50",
      "MaxValue": "16000",
      "Default": "100",
      "ConstraintDescription": "must be a valid number, 50-16000"
    },
    "SHCEnabled": {
      "Description": "Do you want to build a Splunk search head cluster?",
      "Type": "String",
      "Default": "no",
      "AllowedValues": ["yes", "no"]
    },
    "AvailabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved (2 AZs are used for this deployment)",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "VPCCIDR": {
      "Description": "The address space that will be assigned to the entire VPC where Splunk will reside. (Recommend at least a /16)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PrivateSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.0.0/19",
      "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
      "Type": "String",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PrivateSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "Default": "10.0.32.0/19",
      "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
      "Type": "String",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PublicSubnet1CIDR": {
      "Description": "The address space that will be assigned to the first Splunk server subnet. (x.x.x.x/x notation)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "10.0.128.0/20",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PublicSubnet2CIDR": {
      "Description": "The address space that will be assigned to the second Splunk server subnet. (x.x.x.x/x notation)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "Default": "10.0.144.0/20",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "SplunkSecret": {
      "NoEcho": "true",
      "Description": "Shared cluster secret for Search Head and Indexer clusters. Must be at least 8 characters containing letters, numbers and symbols.",
      "Type": "String",
      "MinLength": "6",
      "MaxLength": "32",
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "ConstraintDescription": "Must be at least 8 characters containing letters, numbers and symbols."
    },
    "QSS3BucketName": {
      "Description": "S3 bucket name for the Quick Start assets.",
      "Type": "String",
      "Default": "quickstart-reference"
    },
    "QSS3KeyPrefix": {
      "Description": "S3 key prefix for the Quick Start assets.",
      "Type": "String",
      "Default": "splunk"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface" : 
    {
      "ParameterGroups" : 
      [
        {
          "Label" : { "default" : "AWS Instance and Network Settings" },
          "Parameters" : [ "InstanceType", "KeyName", "SSHLocation", "AvailabilityZones", "VPCCIDR", "PrivateSubnet1CIDR", "PrivateSubnet2CIDR", "PublicSubnet1CIDR", "PublicSubnet2CIDR"]
        },
        {
          "Label" : { "default" : "Splunk Settings" },
          "Parameters" : [ "SplunkAdminPassword", "SplunkSecret" , "SplunkLicenseBucket", "SplunkLicensePath", "SplunkIndexerCount", "SplunkReplicationFactor", "SplunkIndexerDiskSize", "SHCEnabled"]
        },
        {
          "Label" : { "default" : "Quickstart Settings" },
          "Parameters": [ "QSS3BucketName", "QSS3KeyPrefix"]
        }
      ]
    }
  },
  "Mappings": {
    "AWSInfoRegionMap": {
        "ap-northeast-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "ap-northeast-2": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "ap-south-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "ap-southeast-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "ap-southeast-2": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "eu-central-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "eu-west-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "sa-east-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "us-east-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "us-east-2": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "us-gov-west-1": {
          "Partition": "aws-us-gov",
          "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
        },
        "us-west-1": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        },
        "us-west-2": {
          "Partition": "aws",
          "QuickStartS3URL": "https://s3.amazonaws.com"
        }
      }
  },
  "Resources": {
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": { "Fn::Join": [
          "/", [{
              "Fn::FindInMap": [
                "AWSInfoRegionMap", {
                  "Ref": "AWS::Region"
                },
                "QuickStartS3URL"
              ]
            }, {
              "Ref": "QSS3BucketName"
            }, {
              "Ref": "QSS3KeyPrefix"
            },
            "submodules/quickstart-aws-vpc/templates/aws-vpc.template"
          ]
        ]},
        "Parameters" : {
           "AvailabilityZones": {
              "Fn::Join": [
                ",", {
                  "Ref": "AvailabilityZones"
                }
              ]
            },
            "KeyPairName": {
              "Ref": "KeyName"
            },
           "PrivateSubnet1ACIDR": {
              "Ref": "PrivateSubnet1CIDR"
            },
            "PrivateSubnet2ACIDR": {
              "Ref": "PrivateSubnet2CIDR"
            },
            "PublicSubnet1CIDR": {
              "Ref": "PublicSubnet1CIDR"
            },
            "PublicSubnet2CIDR": {
              "Ref": "PublicSubnet2CIDR"
            },
            "VPCCIDR": { "Ref": "VPCCIDR"}
         },
        "TimeoutInMinutes": "15"
      }
    },
    "SplunkStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "VPCStack",
      "Properties": {
        "TemplateURL": { "Fn::Join": [
          "/", [{
              "Fn::FindInMap": [
                "AWSInfoRegionMap", {
                  "Ref": "AWS::Region"
                },
                "QuickStartS3URL"
              ]
            }, {
              "Ref": "QSS3BucketName"
            }, {
              "Ref": "QSS3KeyPrefix"
            },
            "templates/splunk_deployment_existing_vpc.json"
          ]
        ]},
        "Parameters" : {
           "VPCID": { "Fn::GetAtt": [ "VPCStack", "Outputs.VPCID"] },
           "VPCCIDR": { "Fn::GetAtt": [ "VPCStack", "Outputs.VPCCIDR"] },
           "PublicSubnet1ID" : { "Fn::GetAtt": [ "VPCStack", "Outputs.PublicSubnet1ID"] },
           "PublicSubnet2ID" : { "Fn::GetAtt": [ "VPCStack", "Outputs.PublicSubnet2ID"] },
           "InstanceType": { "Ref": "InstanceType" },
           "SplunkAdminPassword": { "Ref": "SplunkAdminPassword" },
           "SplunkSecret": { "Ref": "SplunkSecret" },
           "SplunkLicenseBucket": { "Ref": "SplunkLicenseBucket" },
           "SplunkLicensePath": { "Ref": "SplunkLicensePath" },
           "KeyName": { "Ref": "KeyName" },
           "SSHLocation": { "Ref": "SSHLocation" },
           "SplunkIndexerCount": { "Ref": "SplunkIndexerCount" },
           "SHCEnabled": { "Ref": "SHCEnabled" },
           "SplunkIndexerDiskSize": { "Ref": "SplunkIndexerDiskSize"},
           "SplunkReplicationFactor": { "Ref": "SplunkReplicationFactor"},
           "QSS3BucketName": { "Ref": "QSS3BucketName" },
           "QSS3KeyPrefix": { "Ref": "QSS3KeyPrefix" }
         },
        "TimeoutInMinutes": "60"
      }
    }
  },
  "Outputs": {
    "SearchHeadURL": {
      "Value" : { "Fn::GetAtt" : [ "SplunkStack", "Outputs.SearchHeadURL" ] }
    },
    "ClusterMasterURL": {
      "Description": "Cluster Master URL",
      "Value": {"Fn::GetAtt" : [ "SplunkStack", "Outputs.ClusterMasterURL" ] }
    }
  }
}
